@startuml


package demeter/module/allocation/frame/themeframe/themeframeg41 #05294a{

	class themeframeg41_TimeKeeperCustomData {
		protocol.RoomId RoomId
	}
	class themeframeg41_Theme {
		point base
		map roomDataMap
		atomic.Uint64 count
	}
	class themeframeg41_RoomCustomData {
		bool IsMi
		bool IsCompensation
		int MaxCompensation
	}
	class themeframeg41_CustomData {
		bool IsMi
	}
}

package gitlab.geax.io/demeter/protocol/grpcpro/backendgm/session #0739ce{

	class session_BalanceModifyReq {
	}
	class session_CloseByGameRes {
	}
	class session_CloseByEcSiteReq {
	}
	class session_OpenByGameRes {
	}
	class session_OpenByEcSiteReq {
	}
	class session_OpenByGameReq {
	}
	class session_OpenByEcSiteRes {
	}
	class session_BalanceModifyRes {
	}
	class session_DelSessionIdReq {
	}
	class session_DelSessionIdRes {
	}
	class session_CloseByGameReq {
	}
	class session_CloseByEcSiteRes {
	}
}

package unsafe #094a52{

	class unsafe_Pointer {
	}
}


package demeter/module/gsapi/gsmapping #0d6b5a{

	class gsmapping_Handle {
		sync.RWMutex mu
		map tokenMap
		map roomMap
	}
}



package demeter/module/allocation/frame/partyframe/competitionparty #139ce6{

	class competitionparty_Competitionparty {
		atomic.Uint64 count
		dao.PartyLevelParams params
		point timekeeperLounge
		dao.FastSyncMap loungeMap
	}
}

package sync/atomic #15ad6a{

	class atomic_Value {
	}
	class atomic_Int32 {
	}
}








package demeter/module/allocation/frame/gameframe #26318a{

	class gameframe_Game {
		types.EcSiteId ecSiteId
		types.GameId gameId
		dao.FastSyncMap themeMap
	}
}





package demeter/module/flow #30841e{

	class flow_Flow {
		protocol.ErrorCode statusCode
		point transaction
		interface message
		types.OperationCode operationCode
		types.EventCode eventCode
	}
}

package gitlab.geax.io/demeter/gologger/slackAlert #3294a2{

	class slackAlert_SlackAlertsInfo {
	}
}



package demeter/module/nats #38c62e{

	class nats_NatsModule {
		time.Duration managementTimeOut
		stan.Conn conn
	}
	class nats_error {
	}
}



package sync #3ef7ba{

	class sync_Mutex {
	}
	class sync_RWMutex {
	}
}

package demeter/module/discovery #41083e{
	interface discovery_Manager {
		Launch() error
	}

	class discovery_manager {
	}
	class discovery_error {
	}
}


package demeter/module/redis #452946{

	class redis_manager {
		redis.Cmdable redisClient
		context.Context ctx
		sync.RWMutex mu
	}
	class redis_error {
	}
}

package gitlab.geax.io/demeter/protocol #4739ca{

	class protocol_ErrorCode {
	}
	class protocol_RoomId {
	}
}

package nhooyr.io/websocket #494a4e{

	class websocket_Conn {
	}
	class websocket_StatusCode {
	}
}


package demeter/module/allocation/frame/roomframe #4d6b56{
	interface roomframe_IRoom {
		GetTopicName() string
		GetParams() dao.RoomLevelParams
	}

	class roomframe_Room {
		dao.RoomLevelParams params
		types.TopicName topicName
		dao.FastSyncMap playerMap
	}
}

package demeter/module/grpc #4f7bda{
	interface grpc_MatchCallBack {
		Plus(point) point
		JoinRoom(point) point
		JoinRoutine(point) point
		CreateRoutine(point) point
		ThemeData(point) point
		ThemeDataForG41(point) point
		ThemStayableData(point) point
		OpenByGame(point) point
		OpenByEcSite(point) point
		GetTimekeeper(point) point
	}
	interface grpc_NatsCallBack {
		SendMessage(point) point
	}
	interface grpc_GsCallBack {
		NewCompetition(point) point
		UpdateCompetition(point) point
		CloseCompetition(point) point
		ForcedCloseCompetition(point) point
	}
	interface grpc_IGrpc {
		ImportMatch(MatchCallBack) 
		ImportNats(NatsCallBack) 
		LaunchGcListen(net.Listener) 
		LaunchBackendListen(net.Listener) 
	}

	class grpc_GrpcModule {
		GsCallBack gsApi
		MatchCallBack match
		NatsCallBack nats
		atomic.Bool isListen
	}
	class grpc_error {
	}
}

package go.uber.org/atomic #518c5e{

	class atomic_Bool {
	}
	class atomic_Uint64 {
	}
	class atomic_Int64 {
	}
}




package demeter/module/websocket/socketserver #59ce6e{
	interface socketserver_SocketManagerCallBack {
		OnSocketConnect(point) error
	}

	class socketserver_Handle {
		SocketManagerCallBack socketManagerCallBack
	}
	class socketserver_error {
	}
}

package gitlab.geax.io/demeter/gologger/apm #5bdef2{

	class apm_Apm {
	}
}

package github.com/json-iterator/go #5def76{

	class go_Encoder {
	}
	class go_Decoder {
	}
	class go_Extension {
	}
	class go_Any {
	}
}

package demeter/module/allocation/frame/themeframe/themeframeclub #5ffffa{

	class themeframeclub_Theme {
		point base
		atomic.Uint64 count
	}
}

package gitlab.geax.io/demeter/protocol/room_master_pro #62107e{

	class room_master_pro_DeleteRoomRes {
	}
	class room_master_pro_LockRoomReq {
	}
	class room_master_pro_UnlockRoomRes {
	}
	class room_master_pro_CreateMulitCustomRoomReq {
	}
	class room_master_pro_UnlockRoomReq {
	}
	class room_master_pro_LockRoutineRes {
	}
	class room_master_pro_UnlockRoutineReq {
	}
	class room_master_pro_LeaveRoutineReq {
	}
	class room_master_pro_CreateMulitCustomRoomRes {
	}
	class room_master_pro_CreateCustomRoutineReq {
	}
	class room_master_pro_LockRoomRes {
	}
	class room_master_pro_LeaveRoomReq {
	}
	class room_master_pro_LeaveRoomRes {
	}
	class room_master_pro_DeleteRoutineReq {
	}
	class room_master_pro_DeleteRoutineRes {
	}
	class room_master_pro_LockRoutineReq {
	}
	class room_master_pro_DeleteRoomReq {
	}
	class room_master_pro_UnlockRoutineRes {
	}
	class room_master_pro_LeaveRoutineRes {
	}
	class room_master_pro_CreateCustomRoomReq {
	}
	class room_master_pro_CreateCustomRoomRes {
	}
	class room_master_pro_CreateCustomRoutineRes {
	}
}



package demeter/module/allocation/frame/themeframe/themeframesingleplayer #68420a{

	class themeframesingleplayer_Theme {
		point base
		atomic.Uint64 count
	}
}

package demeter/module/allocation/frame/loungeframe #6a528e{
	interface loungeframe_ILounge {
		GetTopicName() types.TopicName
		GetParams() dao.LoungeLevelParams
		Join(point,dao.PlayerInfo) protocol.ErrorCode
		Leave(point,types.PlayerId) protocol.ErrorCode
	}

	class loungeframe_Lounge {
		types.TopicName topicName
		atomic.Uint64 playerCount
		PlayerJoin playerJoin
		PlayerLeave playerLeave
		dao.LoungeLevelParams Params
		types.LoungeId Id
		dao.FastSyncMap playerMap
		types.ClubId clubId
	}
	class loungeframe_error {
	}
}

package github.com/arangodb/go-driver #6c6312{

	class driver_Database {
	}
}

package demeter/module/websocket/socketclient #6e7396{
	interface socketclient_SocketManagerCallBack {
		OnClose(types.SocketToken) 
		ReceiveMessage(context.Context,point,[]) 
	}
	interface socketclient_IHandle {
		Send(context.Context,[]) error
		GetToken() types.SocketToken
		AddWeight(types.Weight) 
	}

	class socketclient_error {
	}
	class socketclient_Handler {
		context.Context httpCtx
		func cancelFunc
		point conn
		SocketManagerCallBack socketManagerCallBack
		atomic.Int64 weight
		types.SocketToken token
	}
}


package demeter/module/allocation/frame/themeframe/themeframeg29 #72949e{

	class themeframeg29_Theme {
		point timekeeperRoom
		atomic.Uint64 count
		dao.ThemeLevelParams params
	}
}





package context #7ce732{

	class context_Context {
	}
}


package gitlab.geax.io/demeter/protocol/grpcpro/backendgm/competition #81083a{

	class competition_UpdateCompetitionReq {
	}
	class competition_UpdateCompetitionRes {
	}
	class competition_EnableCompetitionReq {
	}
	class competition_EnableCompetitionRes {
	}
	class competition_ForcedCloseCompetitionReq {
	}
	class competition_ForcedCloseCompetitionRes {
	}
	class competition_NewCompetitionReq {
	}
	class competition_NewCompetitionRes {
	}
}

package gitlab.geax.io/demeter/protocol/grpcpro/backendgm/chat #8318be{

	class chat_UpdateChatRoomSettingReq {
	}
	class chat_UpdateChatRoomSettingRes {
	}
	class chat_UpdateChatBlocklistReq {
	}
	class chat_UpdateChatBlocklistRes {
	}
	class chat_UpdateDisableStringReq {
	}
	class chat_UpdateDisableStringRes {
	}
}


package net/http #8739c6{

	class http_ResponseWriter {
	}
	class http_Request {
	}
}





package demeter/module/gsapi #918c5a{
	interface gsapi_NatsCallBack {
		SendMessage(point) point
	}
	interface gsapi_MatchCallBack {
		DeleteRoom(point) point
		DeleteLounge(point) point
		LeaveRoom(point) point
		LeaveLounge(point) point
		LockRoom(point) point
		LockLounge(point) point
		UnlockRoom(point) point
		UnlockLounge(point) point
		CreateCustomRoom(point) point
		CreateCustomLounge(point) point
	}
	interface gsapi_IGsApi {
		ImportMatch(MatchCallBack) 
		ImportNats(NatsCallBack) 
		Launch() error
		GsCount() int
		IsRoomExist(types.IRoomObj) bool
		CreateRoom(point) point
		CreateLounge(point) point
		RecreateRoom(point) point
		RecreateLounge(point) point
		JoinRoom(point) point
		JoinLounge(point) point
		NewCompetition(point) point
		UpdateCompetition(point) point
		CloseCompetition(point) point
		ForcedCloseCompetition(point) point
	}

	class gsapi_FuncNameMap {
		sync.Mutex mu
		atomic.Value read
		map dirty
		int misses
	}
	class gsapi_readOnlyFuncNameMap {
		map m
		bool amended
	}
	class gsapi_GsApi {
		MatchCallBack match
		NatsCallBack nats
		point socketManager
		point gsMapping
		dao.FastSyncMap reqMap
		FuncNameMap funcNameMap
		atomic.Int32 gsCount
	}
	class gsapi_error {
	}
	class gsapi_entryFuncNameMap {
		unsafe.Pointer p
	}
}

package demeter/module/allocation/frame/themeframe/themeframeg61 #939cde{

	class themeframeg61_Theme {
		time.Time refreshTime
		point base
		atomic.Uint64 count
		int64 jpBonus
	}
	class themeframeg61_RoomInfo {
		int playerCount
		roomframe.IRoom room
	}
}

package google.golang.org/grpc #95ad62{

	class grpc_UnaryServerInfo {
	}
	class grpc_UnaryHandler {
	}
	class grpc_ServerOption {
	}
}

package time #97bde6{

	class time_Duration {
	}
	class time_Time {
	}
}


package demeter/module/allocation/frame/themeframe/themeframeCompetition #9bdeee{

	class themeframeCompetition_Theme {
		atomic.Uint64 count
		point base
	}
}

package demeter/module/arangodb #9def72{

	class arangodb_Manager {
		driver.Database db
	}
	class arangodb_error {
	}
}



package net #a420fe{

	class net_Listener {
	}
}

package demeter/conf.d #a63182{

	class conf_Discovery {
		int Post
	}
	class conf_Apm {
		string ServiceName
		string ServiceEnvironment
		string ServerUrls
	}
	class conf_ArangoDB {
		string Password
		int RetryCount
		time.Duration RetryDurationMin
		time.Duration RetryDurationMax
		string Addr
		string Database
		string Username
	}
	class conf_Websocket {
		string Url
		time.Duration RequsetTimeOut
		int PingMaxOut
		time.Duration PingInterval
		time.Duration ReconnInterval
		time.Duration ResendDuration
		time.Duration ConnectTimeOut
		string Addr
	}
	class conf_GRPC {
		string GAME_CONTROL_GRPC_ADDR
		string MANAGEMENT_GRPC_ADDR
	}
	class conf_error {
	}
	class conf_Parameter {
		point Websocket
		string LOG_LEVEL
		string LOG_FORMATTER
		int32 ROOM_STATE_CHECK_TIME
		point Discovery
		constants.ServiceCode LOG_SERVICE_CODE
		time.Duration MANAGEMENT_REQUEST_TIME_OUT
		point Apm
		point Redis
		point ArangoDB
		point Nats
		point GRPC
	}
	class conf_Redis {
		string Addr
		string Password
		int PoolSize
	}
	class conf_Nats {
		string ClusterID
		string Addr
		string Username
		string Password
	}
}

package demeter/match #a84206{

	class match_manager {
		atomic.Bool isCreateThemeTimekeeper
		atomic.Bool isCreatePartyTimekeeper
		context.Context ctx
		time.Time serviceStartTime
		point rpc
		point nats
		discovery.Manager discovery
		atomic.Bool isUnpending
		point allocationMgr
		point gsapi
	}
	class match_error {
	}
}

package demeter/module/allocation/frame/themeframe/themeframeslot #aa528a{

	class themeframeslot_Theme {
		sync.RWMutex muLock
		atomic.Uint64 roomCount
		point base
	}
}

package demeter/module/allocation/frame/partyframe/clubparty #ac630e{

	class clubparty_ClubParty {
		dao.FastSyncMap playerMap
		dao.FastSyncMap loungeMap
		point safeId
		atomic.Uint64 count
		dao.PartyLevelParams params
	}
}


package gitlab.geax.io/demeter/protocol/grpcpro/gcgm #b08416{

	class gcgm_JoinRoomRes {
	}
	class gcgm_ReJoinRes {
	}
	class gcgm_AckRes {
	}
	class gcgm_PlusRes {
	}
	class gcgm_JoinRoomReq {
	}
	class gcgm_CreateRoutineReq {
	}
	class gcgm_GetFishThemeReq {
	}
	class gcgm_AckReq {
	}
	class gcgm_PlusReq {
	}
	class gcgm_GetFishThemeRes {
	}
	class gcgm_IPCheckRes {
	}
	class gcgm_IPCheckReq {
	}
	class gcgm_ReJoinReq {
	}
	class gcgm_JoinRoutineReq {
	}
	class gcgm_JoinRoutineRes {
	}
	class gcgm_CreateRoutineRes {
	}
	class gcgm_ThemeDataReq {
	}
	class gcgm_ThemeDataRes {
	}
	class gcgm_ThemeDataResForG41 {
	}
	class gcgm_RejoinRoutineReq {
	}
	class gcgm_RejoinRoutineRes {
	}
	class gcgm_ThemStayableDataReq {
	}
	class gcgm_ThemStayableDataRes {
	}
}

package demeter/types #b2949a{

	class types_ClubId {
	}
	class types_SequenceId {
	}
	class types_EventCode {
	}
	class types_OperationCode {
	}
	class types_CustomData {
	}
	class types_MessageQueueStatusCode {
	}
	class types_ItemType {
	}
	class types_GameType {
	}
	class types_Balance {
	}
	class types_RoomType {
	}
	class types_PlayerMatchStatus {
	}
	class types_CompetitionTimeKeeper {
	}
	class types_GameDelegatorId {
	}
	class types_PlayerType {
	}
	class types_IRoomObj {
	}
	class types_EmptyObj {
	}
	class types_LoungeStatusCode {
	}
	class types_Weight {
	}
	class types_LoungeGuid {
	}
	class types_RoomId {
	}
	class types_PlayerId {
	}
	class types_RoomMumber {
	}
	class types_RoomStayableType {
	}
	class types_GameGuid {
	}
	class types_CompetitionCycleId {
	}
	class types_RoomNumId {
	}
	class types_LoungeType {
	}
	class types_ThemeNumId {
	}
	class types_Payload {
	}
	class types_EcSiteNumId {
	}
	class types_GameNumId {
	}
	class types_RoomGuid {
	}
	class types_PartyId {
	}
	class types_LoungeId {
	}
	class types_SessionId {
	}
	class types_MessageQueueTopicId {
	}
	class types_ArangoNumber {
	}
	class types_RequestId {
	}
	class types_CompetitionId {
	}
	class types_LeaveReasonId {
	}
	class types_RoomShowType {
	}
	class types_ModuleId {
	}
	class types_EcSiteId {
	}
	class types_CompetitionScoreType {
	}
	class types_TopicName {
	}
	class types_SocketToken {
	}
	class types_PartyGuid {
	}
	class types_CompetitionRank {
	}
	class types_RoomStatusCode {
	}
	class types_QueueGroup {
	}
	class types_MergedGameRecordId {
	}
	class types_ThemeId {
	}
	class types_TraceId {
	}
	class types_SessionIds {
	}
	class types_GameRecordId {
	}
	class types_RoomStayableCount {
	}
	class types_SeatId {
	}
	class types_GameId {
	}
}






package github.com/go-redis/redis/v8 #bef7b2{

	class redis_Cmdable {
	}
}

package demeter/module/allocation #c10836{

	class allocation_AllocationManager {
		dao.FastSyncMap gameMap
		dao.FastSyncMap themeMap
		dao.FastSyncMap ecSiteMap
	}
}









package demeter/module/allocation/frame/ecsiteframe #d39cda{

	class ecsiteframe_EcSite {
		types.EcSiteId ecSiteId
		dao.FastSyncMap partyMap
	}
}



package github.com/nats-io/stan.go #d9ce66{

	class stan_Conn {
	}
}




package demeter/module/websocket #e21076{
	interface websocket_ApiCallBack {
		OnClose(types.SocketToken) 
		ReceiveMessage(context.Context,point,[]) 
	}

	class websocket_WebsocketManager {
		dao.FastSyncMap clientMap
		ApiCallBack apiCallBack
		point server
	}
	class websocket_error {
	}
}

package demeter/module/allocation/frame/partyframe/friendparty #e420fa{

	class friendparty_FriendParty {
		dao.PartyLevelParams params
		dao.FastSyncMap playerMap
		dao.FastSyncMap loungeMap
		point safeId
		atomic.Uint64 count
	}
}


package demeter/module/allocation/frame/themeframe/themeframefriend #e84202{

	class themeframefriend_Theme {
		point base
		atomic.Uint64 count
	}
}

package gitlab.geax.io/demeter/gologger/constants #ea5286{

	class constants_ServiceCode {
	}
}

package demeter/util #ec630a{

	class util_SafeId {
		sync.RWMutex mu
		dao.FastSyncMap idPool
	}
	class util_error {
	}
	class util_RingBuffer {
		int index
		time.Duration interval
		[] zone
		point mux
	}
}


package demeter/module/allocation/frame/themeframe/themebaseframe #f08412{

	class themebaseframe_ThemeBase {
		dao.ThemeLevelParams Params
		dao.FastSyncMap RoomMap
	}
}



package demeter/dao #f6b59e{

	class dao_Gs_LeaveLoungeRes {
		protocol.ErrorCode Code
	}
	class dao_Gs_LockRoomRes {
		protocol.ErrorCode Code
	}
	class dao_Gs_CreateCustomRoomReq {
		types.GameType GameType
		ThemeLevelParams ThemeData
		[] MemberList
		types.CustomData CustomData
	}
	class dao_Gc_PlusRes {
		protocol.ErrorCode Code
		types.TopicName TopicName
	}
	class dao_Gc_CreateLoungeRes {
		types.TopicName TopicName
		protocol.ErrorCode Code
	}
	class dao_Gc_OpenByEcSiteReq {
	}
	class dao_readOnlyFastSyncMap {
		map m
		bool amended
	}
	class dao_FastSyncMapUintInterface {
		sync.Mutex mu
		atomic.Value read
		map dirty
		int misses
	}
	class dao_Gs_CreateMultiRoomRes {
		[] MemberList
		string TopicName
		protocol.ErrorCode Code
	}
	class dao_Gs_CompetitionReq {
		[] CompetitionIds
		LoungeLevelParams LoungeData
	}
	class dao_WebsocketResponseBody {
		types.TraceId TraceId
		protocol.ErrorCode StatusCode
		interface Data
	}
	class dao_SingleKickOutReq {
		types.SessionId SessionID
		types.RequestId RequestID
	}
	class dao_Gs_JoinRoomReq {
		RoomLevelParams RoomData
		[] MemberList
		[] CustomData
	}
	class dao_Gs_UnLockRoomRes {
		protocol.ErrorCode Code
	}
	class dao_Gs_RecreateLoungeRes {
		protocol.ErrorCode Code
	}
	class dao_CloseByEcSiteReq {
		types.EcSiteId EcSiteID
		bool ReleastTest
		types.RequestId RequestID
	}
	class dao_MessageQueueResponseBody {
		string TraceId
		protocol.ErrorCode StatusCode
		interface Data
	}
	class dao_Gs_LockRoomReq {
		RoomLevelParams RoomData
	}
	class dao_Gs_LockLoungeRes {
		protocol.ErrorCode Code
	}
	class dao_Gs_UnLockRoomReq {
		RoomLevelParams RoomData
	}
	class dao_Gs_DeleteLoungeRes {
		protocol.ErrorCode Code
	}
	class dao_Gs_ReCreateRoomRes {
		protocol.ErrorCode Code
	}
	class dao_CreateMultiRoomCustomData {
		map RoomMap
	}
	class dao_OpenByGameRes {
		protocol.ErrorCode Code
	}
	class dao_UpdateDisableStringReq {
		[] DisableID
		types.RequestId RequestID
	}
	class dao_Gc_JoinRoomRes {
		protocol.ErrorCode Code
		types.TopicName TopicName
	}
	class dao_Gs_DeleteRoomReq {
		RoomLevelParams RoomData
	}
	class dao_Gs_JoinLoungeReq {
		LoungeLevelParams LoungeData
		[] MemberList
		[] CustomData
	}
	class dao_CompetitionCustomData {
		string Id
	}
	class dao_CreateRoomResult {
		types.TopicName TopicName
	}
	class dao_AuthorizedGame {
		bool DefaultSync
		map Name
		bool Active
	}
	class dao_Gc_OpenByEcSiteRes {
	}
	class dao_Gc_OpenByGameRes {
	}
	class dao_Gs_LeaveRoomReq {
		[] MemberList
		RoomLevelParams RoomData
	}
	class dao_Gs_LeaveRoomRes {
		protocol.ErrorCode Code
	}
	class dao_Gs_LeaveLoungeReq {
		[] MemberList
		LoungeLevelParams LoungeData
	}
	class dao_CompetitionCustomSetting {
		types.ArangoNumber MaxPlayers
	}
	class dao_CompetitionRoomCustomData {
		types.LoungeGuid LoungeGuid
		CompetitionCustomSetting CompetitionSetting
	}
	class dao_UpdateChatRoomSettingReq {
		[] EcSiteID
		types.RequestId RequestID
	}
	class dao_MessageQueueRequestBody {
		string TraceId
		interface Data
	}
	class dao_FastSyncMap {
		sync.Mutex mu
		atomic.Value read
		map dirty
		int misses
	}
	class dao_Gs_CreateLoungeRes {
		string TopicName
		protocol.ErrorCode Code
	}
	class dao_Gs_CompetitionRes {
		protocol.ErrorCode Code
	}
	class dao_ThemeLevelParams {
		types.ThemeId ThemeId
		types.EcSiteId EcSiteId
		types.GameId GameId
	}
	class dao_ClubCustomData {
		string Id
	}
	class dao_Theme {
		[] Antes
		types.EcSiteId EcSiteId
		types.ThemeId ThemeId
		map CustomSetting
		map Jackpot
		types.ArangoNumber MinCoin
		types.ArangoNumber MaxCoin
		types.GameId GameId
		types.GameType GameType
	}
	class dao_OpenByGameReq {
		types.EcSiteId EcSiteID
		types.GameId GameID
		types.RequestId RequestID
	}
	class dao_Gs_CreateRoomReq {
		types.GameType GameType
		RoomLevelParams RoomData
		[] MemberList
		types.CustomData CustomData
	}
	class dao_GameServiceStatus {
		protocol.ErrorCode ErrCode
	}
	class dao_Gc_JoinLoungeRes {
		protocol.ErrorCode Code
		types.TopicName TopicName
	}
	class dao_readOnlyFastSyncMapUintInterface {
		map m
		bool amended
	}
	class dao_Gs_CreateLoungeReq {
		LoungeLevelParams LoungeData
		[] MemberList
		types.CustomData CustomData
	}
	class dao_Gs_RecreateLoungeReq {
		LoungeLevelParams LoungeData
		[] CustomData
	}
	class dao_WebsocketRequestBody {
		types.TraceId TraceId
		interface Data
	}
	class dao_EcSite {
		types.EcSiteId EcSiteId
		map AuthorizedGames
		map Game
	}
	class dao_BalanceModifyReq {
		types.RequestId RequestID
		types.SessionId SessionID
		types.PlayerId PlayerID
	}
	class dao_Gc_PlusReq {
		ThemeLevelParams ThemeLevelParams
		PlayerInfo PlayerInfo
	}
	class dao_Gc_JoinRoomReq {
		RoomLevelParams RoomLevelParams
		PlayerInfo PlayerInfo
		types.CustomData CustomData
	}
	class dao_Gs_DeleteRoomRes {
		protocol.ErrorCode Code
	}
	class dao_LoungeLevelParams {
		types.EcSiteId EcSiteId
		types.PartyId PartyId
		types.LoungeId LoungeId
	}
	class dao_GetTimekeeperReq {
		types.EcSiteId EcSiteID
	}
	class dao_entryFastSyncMap {
		unsafe.Pointer p
	}
	class dao_Gs_CreateRoomRes {
		types.CustomData CustomData
		types.TopicName TopicName
		protocol.ErrorCode Code
	}
	class dao_Gs_CreateCustomLoungeRes {
		string TopicName
		protocol.ErrorCode Code
		types.CustomData CustomData
	}
	class dao_Gs_UnLockLoungeRes {
		protocol.ErrorCode Code
	}
	class dao_Gs_CreateCustomRoomRes {
		types.CustomData CustomData
		[] TopicNames
		protocol.ErrorCode Code
	}
	class dao_CreateMultiRoomChanFlow {
		point RoomRes
		protocol.ErrorCode Status
		[] Players
	}
	class dao_RoutineTimekeeperCustomData {
		int Type
	}
	class dao_GetTimekeeperRes {
		LoungeLevelParams LoungeLevelParams
		protocol.ErrorCode Code
	}
	class dao_Gc_OpenByGameReq {
	}
	class dao_Gs_JoinLoungeRes {
		protocol.ErrorCode Code
	}
	class dao_OpenByEcSiteRes {
		protocol.ErrorCode Code
	}
	class dao_Gs_JoinRoomRes {
		protocol.ErrorCode Code
	}
	class dao_Gs_LockLoungeReq {
		LoungeLevelParams LoungeData
	}
	class dao_PlayerInfo {
		types.PlayerId PlayerId
		types.Balance Balance
		types.SessionId SessionId
		types.Balance CarryAmount
		types.PlayerType PlayerType
	}
	class dao_Gc_JoinLoungeReq {
		types.CustomData CustomData
		LoungeLevelParams LoungeLevelParams
		PlayerInfo PlayerInfo
	}
	class dao_Gs_DeleteLoungeReq {
		LoungeLevelParams LoungeData
		[] CustomData
	}
	class dao_Gs_UnLockLoungeReq {
		LoungeLevelParams LoungeData
	}
	class dao_Gs_CreateCustomLoungeReq {
		types.CustomData CustomData
		PartyLevelParams PartyData
		[] MemberList
	}
	class dao_PartyLevelParams {
		types.EcSiteId EcSiteId
		types.PartyId PartyId
	}
	class dao_RoomLevelParams {
		types.EcSiteId EcSiteId
		types.GameId GameId
		types.ThemeId ThemeId
		types.RoomId RoomId
	}
	class dao_CompetitionRes {
		int Result
		string TrickId
	}
	class dao_OpenByEcSiteReq {
		types.EcSiteId EcSiteID
		types.RequestId RequestID
	}
	class dao_UpdateChatBlocklistReq {
		[] BlacklistID
		types.RequestId RequestID
	}
	class dao_DecodeResponse {
		types.OperationCode OperationCode
		types.EventCode EventCode
		[] Data
	}
	class dao_EncodeData {
		types.OperationCode OperationCode
		types.EventCode EventCode
		interface Payload
	}
	class dao_GameLevelParams {
		types.EcSiteId EcSiteId
		types.GameId GameId
	}
	class dao_CloseByGameReq {
		types.EcSiteId EcSiteID
		types.GameId GameID
		types.RequestId RequestID
	}
	class dao_Gc_CreateLoungeReq {
		PartyLevelParams PartyLevelParams
		PlayerInfo PlayerInfo
		types.CustomData CustomData
	}
	class dao_entryFastSyncMapUintInterface {
		unsafe.Pointer p
	}
	class dao_Gs_RecreateRoomReq {
		RoomLevelParams RoomData
	}
}



package io #fce72a{

	class io_Writer {
	}
	class io_Reader {
	}
}


allocation_AllocationManager --> dao_FastSyncMap #c21078;line.dashed;
arangodb_Manager --> driver_Database #9ef7b4;line.dashed;
clubparty_ClubParty --> atomic_Uint64 #ad6b50;line.dashed;
clubparty_ClubParty --> dao_FastSyncMap #ad6b50;line.dashed;
clubparty_ClubParty --> dao_PartyLevelParams #ad6b50;line.dashed;
clubparty_ClubParty --> util_SafeId #ad6b50;line.dashed;
competitionparty_Competitionparty --> atomic_Uint64 #14a528;line.dashed;
competitionparty_Competitionparty --> dao_FastSyncMap #14a528;line.dashed;
competitionparty_Competitionparty --> dao_PartyLevelParams #14a528;line.dashed;
competitionparty_Competitionparty --> loungeframe_Lounge #14a528;line.dashed;
conf_ArangoDB --> time_Duration #a739c4;line.dashed;
conf_Parameter --> conf_Apm #a739c4;line.dashed;
conf_Parameter --> conf_ArangoDB #a739c4;line.dashed;
conf_Parameter --> conf_Discovery #a739c4;line.dashed;
conf_Parameter --> conf_GRPC #a739c4;line.dashed;
conf_Parameter --> conf_Nats #a739c4;line.dashed;
conf_Parameter --> conf_Redis #a739c4;line.dashed;
conf_Parameter --> conf_Websocket #a739c4;line.dashed;
conf_Parameter --> constants_ServiceCode #a739c4;line.dashed;
conf_Parameter --> time_Duration #a739c4;line.dashed;
conf_Websocket --> time_Duration #a739c4;line.dashed;
dao_BalanceModifyReq --> types_PlayerId #f7bde0;line.dashed;
dao_BalanceModifyReq --> types_RequestId #f7bde0;line.dashed;
dao_BalanceModifyReq --> types_SessionId #f7bde0;line.dashed;
dao_CloseByEcSiteReq --> types_EcSiteId #f7bde0;line.dashed;
dao_CloseByEcSiteReq --> types_RequestId #f7bde0;line.dashed;
dao_CloseByGameReq --> types_EcSiteId #f7bde0;line.dashed;
dao_CloseByGameReq --> types_GameId #f7bde0;line.dashed;
dao_CloseByGameReq --> types_RequestId #f7bde0;line.dashed;
dao_CompetitionCustomSetting --> types_ArangoNumber #f7bde0;line.dashed;
dao_CompetitionRoomCustomData --> dao_CompetitionCustomSetting #f7bde0;line.dashed;
dao_CompetitionRoomCustomData --> types_LoungeGuid #f7bde0;line.dashed;
dao_CreateMultiRoomChanFlow --> dao_CreateRoomResult #f7bde0;line.dashed;
dao_CreateMultiRoomChanFlow --> dao_PlayerInfo #f7bde0;line.dashed;
dao_CreateMultiRoomChanFlow --> protocol_ErrorCode #f7bde0;line.dashed;
dao_CreateMultiRoomCustomData --> types_PlayerId #f7bde0;line.dashed;
dao_CreateMultiRoomCustomData --> types_TopicName #f7bde0;line.dashed;
dao_CreateRoomResult --> types_TopicName #f7bde0;line.dashed;
dao_DecodeResponse --> types_EventCode #f7bde0;line.dashed;
dao_DecodeResponse --> types_OperationCode #f7bde0;line.dashed;
dao_EcSite --> dao_AuthorizedGame #f7bde0;line.dashed;
dao_EcSite --> dao_Theme #f7bde0;line.dashed;
dao_EcSite --> types_EcSiteId #f7bde0;line.dashed;
dao_EcSite --> types_GameId #f7bde0;line.dashed;
dao_EncodeData --> types_EventCode #f7bde0;line.dashed;
dao_EncodeData --> types_OperationCode #f7bde0;line.dashed;
dao_FastSyncMap --> atomic_Value #f7bde0;line.dashed;
dao_FastSyncMap --> dao_entryFastSyncMap #f7bde0;line.dashed;
dao_FastSyncMap --> sync_Mutex #f7bde0;line.dashed;
dao_FastSyncMapUintInterface --> atomic_Value #f7bde0;line.dashed;
dao_FastSyncMapUintInterface --> dao_entryFastSyncMapUintInterface #f7bde0;line.dashed;
dao_FastSyncMapUintInterface --> sync_Mutex #f7bde0;line.dashed;
dao_GameLevelParams --> types_EcSiteId #f7bde0;line.dashed;
dao_GameLevelParams --> types_GameId #f7bde0;line.dashed;
dao_GameServiceStatus --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gc_CreateLoungeReq --> dao_PartyLevelParams #f7bde0;line.dashed;
dao_Gc_CreateLoungeReq --> dao_PlayerInfo #f7bde0;line.dashed;
dao_Gc_CreateLoungeReq --> types_CustomData #f7bde0;line.dashed;
dao_Gc_CreateLoungeRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gc_CreateLoungeRes --> types_TopicName #f7bde0;line.dashed;
dao_Gc_JoinLoungeReq --> dao_LoungeLevelParams #f7bde0;line.dashed;
dao_Gc_JoinLoungeReq --> dao_PlayerInfo #f7bde0;line.dashed;
dao_Gc_JoinLoungeReq --> types_CustomData #f7bde0;line.dashed;
dao_Gc_JoinLoungeRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gc_JoinLoungeRes --> types_TopicName #f7bde0;line.dashed;
dao_Gc_JoinRoomReq --> dao_PlayerInfo #f7bde0;line.dashed;
dao_Gc_JoinRoomReq --> dao_RoomLevelParams #f7bde0;line.dashed;
dao_Gc_JoinRoomReq --> types_CustomData #f7bde0;line.dashed;
dao_Gc_JoinRoomRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gc_JoinRoomRes --> types_TopicName #f7bde0;line.dashed;
dao_Gc_PlusReq --> dao_PlayerInfo #f7bde0;line.dashed;
dao_Gc_PlusReq --> dao_ThemeLevelParams #f7bde0;line.dashed;
dao_Gc_PlusRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gc_PlusRes --> types_TopicName #f7bde0;line.dashed;
dao_GetTimekeeperReq --> types_EcSiteId #f7bde0;line.dashed;
dao_GetTimekeeperRes --> dao_LoungeLevelParams #f7bde0;line.dashed;
dao_GetTimekeeperRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_CompetitionReq --> dao_LoungeLevelParams #f7bde0;line.dashed;
dao_Gs_CompetitionReq --> types_CompetitionId #f7bde0;line.dashed;
dao_Gs_CompetitionRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_CreateCustomLoungeReq --> dao_PartyLevelParams #f7bde0;line.dashed;
dao_Gs_CreateCustomLoungeReq --> dao_PlayerInfo #f7bde0;line.dashed;
dao_Gs_CreateCustomLoungeReq --> types_CustomData #f7bde0;line.dashed;
dao_Gs_CreateCustomLoungeRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_CreateCustomLoungeRes --> types_CustomData #f7bde0;line.dashed;
dao_Gs_CreateCustomRoomReq --> dao_PlayerInfo #f7bde0;line.dashed;
dao_Gs_CreateCustomRoomReq --> dao_ThemeLevelParams #f7bde0;line.dashed;
dao_Gs_CreateCustomRoomReq --> types_CustomData #f7bde0;line.dashed;
dao_Gs_CreateCustomRoomReq --> types_GameType #f7bde0;line.dashed;
dao_Gs_CreateCustomRoomRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_CreateCustomRoomRes --> types_CustomData #f7bde0;line.dashed;
dao_Gs_CreateCustomRoomRes --> types_TopicName #f7bde0;line.dashed;
dao_Gs_CreateLoungeReq --> dao_LoungeLevelParams #f7bde0;line.dashed;
dao_Gs_CreateLoungeReq --> dao_PlayerInfo #f7bde0;line.dashed;
dao_Gs_CreateLoungeReq --> types_CustomData #f7bde0;line.dashed;
dao_Gs_CreateLoungeRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_CreateMultiRoomRes --> dao_PlayerInfo #f7bde0;line.dashed;
dao_Gs_CreateMultiRoomRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_CreateRoomReq --> dao_PlayerInfo #f7bde0;line.dashed;
dao_Gs_CreateRoomReq --> dao_RoomLevelParams #f7bde0;line.dashed;
dao_Gs_CreateRoomReq --> types_CustomData #f7bde0;line.dashed;
dao_Gs_CreateRoomReq --> types_GameType #f7bde0;line.dashed;
dao_Gs_CreateRoomRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_CreateRoomRes --> types_CustomData #f7bde0;line.dashed;
dao_Gs_CreateRoomRes --> types_TopicName #f7bde0;line.dashed;
dao_Gs_DeleteLoungeReq --> dao_LoungeLevelParams #f7bde0;line.dashed;
dao_Gs_DeleteLoungeRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_DeleteRoomReq --> dao_RoomLevelParams #f7bde0;line.dashed;
dao_Gs_DeleteRoomRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_JoinLoungeReq --> dao_LoungeLevelParams #f7bde0;line.dashed;
dao_Gs_JoinLoungeReq --> dao_PlayerInfo #f7bde0;line.dashed;
dao_Gs_JoinLoungeRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_JoinRoomReq --> dao_PlayerInfo #f7bde0;line.dashed;
dao_Gs_JoinRoomReq --> dao_RoomLevelParams #f7bde0;line.dashed;
dao_Gs_JoinRoomRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_LeaveLoungeReq --> dao_LoungeLevelParams #f7bde0;line.dashed;
dao_Gs_LeaveLoungeReq --> dao_PlayerInfo #f7bde0;line.dashed;
dao_Gs_LeaveLoungeRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_LeaveRoomReq --> dao_PlayerInfo #f7bde0;line.dashed;
dao_Gs_LeaveRoomReq --> dao_RoomLevelParams #f7bde0;line.dashed;
dao_Gs_LeaveRoomRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_LockLoungeReq --> dao_LoungeLevelParams #f7bde0;line.dashed;
dao_Gs_LockLoungeRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_LockRoomReq --> dao_RoomLevelParams #f7bde0;line.dashed;
dao_Gs_LockRoomRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_ReCreateRoomRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_RecreateLoungeReq --> dao_LoungeLevelParams #f7bde0;line.dashed;
dao_Gs_RecreateLoungeRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_RecreateRoomReq --> dao_RoomLevelParams #f7bde0;line.dashed;
dao_Gs_UnLockLoungeReq --> dao_LoungeLevelParams #f7bde0;line.dashed;
dao_Gs_UnLockLoungeRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_Gs_UnLockRoomReq --> dao_RoomLevelParams #f7bde0;line.dashed;
dao_Gs_UnLockRoomRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_LoungeLevelParams --> types_EcSiteId #f7bde0;line.dashed;
dao_LoungeLevelParams --> types_LoungeId #f7bde0;line.dashed;
dao_LoungeLevelParams --> types_PartyId #f7bde0;line.dashed;
dao_MessageQueueResponseBody --> protocol_ErrorCode #f7bde0;line.dashed;
dao_OpenByEcSiteReq --> types_EcSiteId #f7bde0;line.dashed;
dao_OpenByEcSiteReq --> types_RequestId #f7bde0;line.dashed;
dao_OpenByEcSiteRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_OpenByGameReq --> types_EcSiteId #f7bde0;line.dashed;
dao_OpenByGameReq --> types_GameId #f7bde0;line.dashed;
dao_OpenByGameReq --> types_RequestId #f7bde0;line.dashed;
dao_OpenByGameRes --> protocol_ErrorCode #f7bde0;line.dashed;
dao_PartyLevelParams --> types_EcSiteId #f7bde0;line.dashed;
dao_PartyLevelParams --> types_PartyId #f7bde0;line.dashed;
dao_PlayerInfo --> types_Balance #f7bde0;line.dashed;
dao_PlayerInfo --> types_PlayerId #f7bde0;line.dashed;
dao_PlayerInfo --> types_PlayerType #f7bde0;line.dashed;
dao_PlayerInfo --> types_SessionId #f7bde0;line.dashed;
dao_RoomLevelParams --> types_EcSiteId #f7bde0;line.dashed;
dao_RoomLevelParams --> types_GameId #f7bde0;line.dashed;
dao_RoomLevelParams --> types_RoomId #f7bde0;line.dashed;
dao_RoomLevelParams --> types_ThemeId #f7bde0;line.dashed;
dao_SingleKickOutReq --> types_RequestId #f7bde0;line.dashed;
dao_SingleKickOutReq --> types_SessionId #f7bde0;line.dashed;
dao_Theme --> types_ArangoNumber #f7bde0;line.dashed;
dao_Theme --> types_EcSiteId #f7bde0;line.dashed;
dao_Theme --> types_GameId #f7bde0;line.dashed;
dao_Theme --> types_GameType #f7bde0;line.dashed;
dao_Theme --> types_ThemeId #f7bde0;line.dashed;
dao_ThemeLevelParams --> types_EcSiteId #f7bde0;line.dashed;
dao_ThemeLevelParams --> types_GameId #f7bde0;line.dashed;
dao_ThemeLevelParams --> types_ThemeId #f7bde0;line.dashed;
dao_UpdateChatBlocklistReq --> types_RequestId #f7bde0;line.dashed;
dao_UpdateChatRoomSettingReq --> types_EcSiteId #f7bde0;line.dashed;
dao_UpdateChatRoomSettingReq --> types_RequestId #f7bde0;line.dashed;
dao_UpdateDisableStringReq --> types_RequestId #f7bde0;line.dashed;
dao_WebsocketRequestBody --> types_TraceId #f7bde0;line.dashed;
dao_WebsocketResponseBody --> protocol_ErrorCode #f7bde0;line.dashed;
dao_WebsocketResponseBody --> types_TraceId #f7bde0;line.dashed;
dao_entryFastSyncMap --> unsafe_Pointer #f7bde0;line.dashed;
dao_entryFastSyncMapUintInterface --> unsafe_Pointer #f7bde0;line.dashed;
dao_readOnlyFastSyncMap --> dao_entryFastSyncMap #f7bde0;line.dashed;
dao_readOnlyFastSyncMapUintInterface --> dao_entryFastSyncMapUintInterface #f7bde0;line.dashed;
ecsiteframe_EcSite --> dao_FastSyncMap #d4a51c;line.dashed;
ecsiteframe_EcSite --> types_EcSiteId #d4a51c;line.dashed;
flow_Flow --> apm_Apm #318c60;line.dashed;
flow_Flow --> protocol_ErrorCode #318c60;line.dashed;
flow_Flow --> types_EventCode #318c60;line.dashed;
flow_Flow --> types_OperationCode #318c60;line.dashed;
friendparty_FriendParty --> atomic_Uint64 #e5293c;line.dashed;
friendparty_FriendParty --> dao_FastSyncMap #e5293c;line.dashed;
friendparty_FriendParty --> dao_PartyLevelParams #e5293c;line.dashed;
friendparty_FriendParty --> util_SafeId #e5293c;line.dashed;
gameframe_Game --> dao_FastSyncMap #2739cc;line.dashed;
gameframe_Game --> types_EcSiteId #2739cc;line.dashed;
gameframe_Game --> types_GameId #2739cc;line.dashed;
grpc_GrpcModule --> atomic_Bool #50841c;line.dashed;
grpc_GrpcModule --> grpc_GsCallBack #50841c;line.dashed;
grpc_GrpcModule --> grpc_MatchCallBack #50841c;line.dashed;
grpc_GrpcModule --> grpc_NatsCallBack #50841c;line.dashed;
gsapi_FuncNameMap --> atomic_Value #92949c;line.dashed;
gsapi_FuncNameMap --> gsapi_entryFuncNameMap #92949c;line.dashed;
gsapi_FuncNameMap --> sync_Mutex #92949c;line.dashed;
gsapi_GsApi --> atomic_Int32 #92949c;line.dashed;
gsapi_GsApi --> dao_FastSyncMap #92949c;line.dashed;
gsapi_GsApi --> gsapi_FuncNameMap #92949c;line.dashed;
gsapi_GsApi --> gsapi_MatchCallBack #92949c;line.dashed;
gsapi_GsApi --> gsapi_NatsCallBack #92949c;line.dashed;
gsapi_GsApi --> gsmapping_Handle #92949c;line.dashed;
gsapi_GsApi --> websocket_WebsocketManager #92949c;line.dashed;
gsapi_entryFuncNameMap --> unsafe_Pointer #92949c;line.dashed;
gsapi_readOnlyFuncNameMap --> gsapi_entryFuncNameMap #92949c;line.dashed;
gsmapping_Handle --> sync_RWMutex #0e739c;line.dashed;
gsmapping_Handle --> types_EmptyObj #0e739c;line.dashed;
gsmapping_Handle --> types_IRoomObj #0e739c;line.dashed;
gsmapping_Handle --> types_SocketToken #0e739c;line.dashed;
loungeframe_Lounge --> atomic_Uint64 #6b5ad0;line.dashed;
loungeframe_Lounge --> dao_FastSyncMap #6b5ad0;line.dashed;
loungeframe_Lounge --> dao_LoungeLevelParams #6b5ad0;line.dashed;
loungeframe_Lounge --> loungeframe_PlayerJoin #6b5ad0;line.dashed;
loungeframe_Lounge --> loungeframe_PlayerLeave #6b5ad0;line.dashed;
loungeframe_Lounge --> types_ClubId #6b5ad0;line.dashed;
loungeframe_Lounge --> types_LoungeId #6b5ad0;line.dashed;
loungeframe_Lounge --> types_TopicName #6b5ad0;line.dashed;
match_manager --> allocation_AllocationManager #a94a48;line.dashed;
match_manager --> atomic_Bool #a94a48;line.dashed;
match_manager --> context_Context #a94a48;line.dashed;
match_manager --> discovery_Manager #a94a48;line.dashed;
match_manager --> grpc_GrpcModule #a94a48;line.dashed;
match_manager --> gsapi_GsApi #a94a48;line.dashed;
match_manager --> nats_NatsModule #a94a48;line.dashed;
match_manager --> time_Time #a94a48;line.dashed;
nats_NatsModule --> stan_Conn #39ce70;line.dashed;
nats_NatsModule --> time_Duration #39ce70;line.dashed;
redis_manager --> context_Context #463188;line.dashed;
redis_manager --> redis_Cmdable #463188;line.dashed;
redis_manager --> sync_RWMutex #463188;line.dashed;
roomframe_Room --> dao_FastSyncMap #4e7398;line.dashed;
roomframe_Room --> dao_RoomLevelParams #4e7398;line.dashed;
roomframe_Room --> types_TopicName #4e7398;line.dashed;
socketclient_Handler --> atomic_Int64 #6f7bd8;line.dashed;
socketclient_Handler --> context_Context #6f7bd8;line.dashed;
socketclient_Handler --> socketclient_SocketManagerCallBack #6f7bd8;line.dashed;
socketclient_Handler --> types_SocketToken #6f7bd8;line.dashed;
socketclient_Handler --> websocket_Conn #6f7bd8;line.dashed;
socketserver_Handle --> socketserver_SocketManagerCallBack #5ad6b0;line.dashed;
themebaseframe_ThemeBase --> dao_FastSyncMap #f18c54;line.dashed;
themebaseframe_ThemeBase --> dao_ThemeLevelParams #f18c54;line.dashed;
themeframeCompetition_Theme --> atomic_Uint64 #9ce730;line.dashed;
themeframeCompetition_Theme --> themebaseframe_ThemeBase #9ce730;line.dashed;
themeframeclub_Theme --> atomic_Uint64 #61083c;line.dashed;
themeframeclub_Theme --> themebaseframe_ThemeBase #61083c;line.dashed;
themeframefriend_Theme --> atomic_Uint64 #e94a44;line.dashed;
themeframefriend_Theme --> themebaseframe_ThemeBase #e94a44;line.dashed;
themeframeg29_Theme --> atomic_Uint64 #739ce0;line.dashed;
themeframeg29_Theme --> dao_ThemeLevelParams #739ce0;line.dashed;
themeframeg29_Theme --> roomframe_Room #739ce0;line.dashed;
themeframeg41_Theme --> atomic_Uint64 #06318c;line.dashed;
themeframeg41_Theme --> themebaseframe_ThemeBase #06318c;line.dashed;
themeframeg41_Theme --> themeframeg41_RoomCustomData #06318c;line.dashed;
themeframeg41_TimeKeeperCustomData --> protocol_RoomId #06318c;line.dashed;
themeframeg61_RoomInfo --> roomframe_IRoom #94a520;line.dashed;
themeframeg61_Theme --> atomic_Uint64 #94a520;line.dashed;
themeframeg61_Theme --> themebaseframe_ThemeBase #94a520;line.dashed;
themeframeg61_Theme --> time_Time #94a520;line.dashed;
themeframesingleplayer_Theme --> atomic_Uint64 #694a4c;line.dashed;
themeframesingleplayer_Theme --> themebaseframe_ThemeBase #694a4c;line.dashed;
themeframeslot_Theme --> atomic_Uint64 #ab5acc;line.dashed;
themeframeslot_Theme --> sync_RWMutex #ab5acc;line.dashed;
themeframeslot_Theme --> themebaseframe_ThemeBase #ab5acc;line.dashed;
types_SessionIds --> types_SessionId #b39cdc;line.dashed;
util_RingBuffer --> sync_Mutex #ed6b4c;line.dashed;
util_RingBuffer --> time_Duration #ed6b4c;line.dashed;
util_SafeId --> dao_FastSyncMap #ed6b4c;line.dashed;
util_SafeId --> sync_RWMutex #ed6b4c;line.dashed;
websocket_WebsocketManager --> dao_FastSyncMap #e318b8;line.dashed;
websocket_WebsocketManager --> socketserver_Handle #e318b8;line.dashed;
websocket_WebsocketManager --> websocket_ApiCallBack #e318b8;line.dashed;
@enduml
